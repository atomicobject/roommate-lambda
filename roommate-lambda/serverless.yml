AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "An AWS Serverless Application."

Resources:
  Get:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: "roommate-lambda::RoommateLambda.Functions::Get"
      Runtime: "dotnetcore2.1"
      CodeUri: ""
      MemorySize: 256
      Timeout: 30
      Role: null
      Policies: ["AWSLambdaBasicExecutionRole"]
      Events:
        GetResource:
          Type: "Api"
          Properties:
            Path: "/"
            Method: "GET"

  IotPublishPolicy:
    Type: AWS::IoT::Policy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Effect: Allow
        Action:
          - "iot::Connect"
          - "iot::Publish"
        Resource:
          - "arn:aws:iot:*:*:topic/*"
          - "arn:aws:iot:*:*:client/*"
      PolicyName: "IotPublishPolicy"

  Post:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: "roommate-lambda::RoommateLambda.Functions::Post"
      Runtime: "dotnetcore2.1"
      CodeUri: ""
      MemorySize: 256
      Timeout: 30
      Role: null
      Policies:
        - AWSLambdaBasicExecutionRole
        - Ref: "IotPublishPolicy"
      Events:
        PutResource:
          Type: "Api"
          Properties:
            Path: "/"
            Method: "POST"

  UpdateRequest:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: "roommate-lambda::RoommateLambda.Functions::UpdateRequest"
      Runtime: "dotnetcore2.1"
      CodeUri: ""
      MemorySize: 256
      Timeout: 30
      Role: null
      Policies:
        - AWSLambdaBasicExecutionRole
        - Ref: "IotPublishPolicy"
      Events:
        UpdateRequest:
          Type: IoTRule
          Properties:
            Sql: "SELECT * FROM 'update-request'"


Outputs:
  ApiURL:
    Description: "API endpoint URL for Prod environment"
    Value:
      Fn::Sub: "https://$ServerlessRestApi.execute-api.$AWS::Region.amazonaws.com/Prod/"
